#container {
    height: 600px;
    width: 600px;
    border: 2px solid black;
    display: grid;  
    
}

.small {
    border: 1px solid black;
}

.button {
    border: 2px solid black;

}

/*
const container = document.querySelector('#container');
const divs = container.querySelectorAll('div')
const div = document.createElement('div');
const getRandomNumber = (maxNum) => {
    return Math.floor(Math.random()*maxNum)
};

const getRandomColour = () => {
    const h = getRandomNumber(360);
    const s = getRandomNumber(100);
    const l = getRandomNumber(100);

    return `hsl(${h}deg, ${s}%, ${l}%)`;
};

const button = document.querySelector('.button')

function grid(rows, columns) {
    for (let c = 0; c < rows*columns; c++) {
        const div = document.createElement('div');
        container.style.gridTemplateColumns = `repeat(${rows}, 1fr)`
        container.style.gridTemplateRows = `repeat(${columns}, 1fr)`
        div.classList.add('small');
        container.appendChild(div);
    }
}
grid();

function newGrid() {
    button.addEventListener('click', () => {
    user1 = prompt("How many rows do you want?");
    user2 = prompt("How many columns do you want?");
    grid(user1, user2)})
}
newGrid();

function coloring() {
    divs.addEventListener('mouseover', () => {
        div.style.backgroundColor = 'black';
    })
}
coloring();
// function resetGrid() {
//     divs.forEach((div) => {remove.div()})
// }
// resetGrid();




/*
const container = document.querySelector('#container');
const divs = container.querySelectorAll('div')
const getRandomNumber = (maxNum) => {
    return Math.floor(Math.random()*maxNum)
};

const getRandomColour = () => {
    const h = getRandomNumber(360);
    const s = getRandomNumber(100);
    const l = getRandomNumber(100);

    return `hsl(${h}deg, ${s}%, ${l}%)`;
};

const button = document.querySelector('.button')
function grid() {
    const button = document.querySelector('.button')
    button.addEventListener('click', () => {
    const rows = prompt('How many rows do you want?');
    const columns = prompt('How many columns do you want?');
    container.setAttribute('style', `grid-template-rows: repeat(${rows}, 18px); grid-template-columns: repeat(${columns}, 18px)`);
        
    if (rows > 100 || columns > 100) {
         alert("Submit number smaller than 100");
         const rows = prompt('How many rows do you want?');
         const columns = prompt('How many columns do you want?')}


    for (c = 0; c < rows*columns; c++) {
    const div = document.createElement('div');
    div.classList.add('small');
    container.insertAdjacentElement("beforeend", div);


    div.addEventListener('mouseover', () => {
    div.style.backgroundColor = getRandomColour();
    })

    div.addEventListener('mouseleave', () => {
    setTimeout(() => {
    div.style.backgroundColor = 'white'}, 2000)})
    
    // if (click >= 1) {

    // // button.addEventListener('click', () => {
    // //     window.location.reload();
    // })
    }})

    
}

grid();


*/

